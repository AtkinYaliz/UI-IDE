{
  "_args": [
    [
      {
        "raw": "synesthesia@https://registry.npmjs.org/synesthesia/-/synesthesia-1.0.1.tgz",
        "scope": null,
        "escapedName": "synesthesia",
        "name": "synesthesia",
        "rawSpec": "https://registry.npmjs.org/synesthesia/-/synesthesia-1.0.1.tgz",
        "spec": "https://registry.npmjs.org/synesthesia/-/synesthesia-1.0.1.tgz",
        "type": "remote"
      },
      "/Users/shinnn/github/vscode-stylelint"
    ]
  ],
  "_from": "synesthesia@>=1.0.1 <2.0.0",
  "_id": "synesthesia@1.0.1",
  "_inCache": true,
  "_location": "/synesthesia",
  "_phantomChildren": {},
  "_requested": {
    "raw": "synesthesia@https://registry.npmjs.org/synesthesia/-/synesthesia-1.0.1.tgz",
    "scope": null,
    "escapedName": "synesthesia",
    "name": "synesthesia",
    "rawSpec": "https://registry.npmjs.org/synesthesia/-/synesthesia-1.0.1.tgz",
    "spec": "https://registry.npmjs.org/synesthesia/-/synesthesia-1.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/",
    "/pipetteur"
  ],
  "_resolved": "https://registry.npmjs.org/synesthesia/-/synesthesia-1.0.1.tgz",
  "_shasum": "5ef95ea548c0d5c6e6f9bb4b0d0731dff864a777",
  "_shrinkwrap": null,
  "_spec": "synesthesia@https://registry.npmjs.org/synesthesia/-/synesthesia-1.0.1.tgz",
  "_where": "/Users/shinnn/github/vscode-stylelint",
  "author": {
    "name": "Peter Müller",
    "email": "munter@fumle.dk"
  },
  "bugs": {
    "url": "https://github.com/Munter/synesthesia/issues"
  },
  "dependencies": {
    "css-color-names": "0.0.3"
  },
  "description": "A collection of regular expressions to match color syntax substrings from a text",
  "devDependencies": {
    "coveralls": "2.11.9",
    "istanbul": "0.4.2",
    "jshint": "2.9.1",
    "mocha": "2.4.5",
    "mocha-lcov-reporter": "1.2.0",
    "unexpected": "10.11.1"
  },
  "directories": {
    "test": "test"
  },
  "files": [
    "lib"
  ],
  "homepage": "https://github.com/Munter/synesthesia",
  "keywords": [
    "color",
    "match",
    "substring",
    "regex",
    "regexp",
    "syntax",
    "css",
    "html"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "synesthesia",
  "optionalDependencies": {},
  "readme": "Synesthesia\n===========\n[![NPM version](https://badge.fury.io/js/synesthesia.svg)](http://badge.fury.io/js/synesthesia)\n[![Build Status](https://travis-ci.org/Munter/synesthesia.svg?branch=master)](https://travis-ci.org/Munter/synesthesia)\n[![Coverage Status](https://coveralls.io/repos/Munter/synesthesia/badge.svg?style=flat)](https://coveralls.io/r/Munter/synesthesia)\n[![Dependency Status](https://david-dm.org/Munter/synesthesia.svg)](https://david-dm.org/Munter/synesthesia)\n\nA collection og regular expressions to find occurences of valid color syntaxes.\n\nIt can match hex syntaxes, rgb, rgba, hsv, hsva, hsl, hsla and CSS color names.\n\nUsage\n-----\n\nConsider the following setup:\n\n``` javascript\n// Let's get some color in here\nvar colorString = [\n    'red green blue',\n    '#FF0000 #00FF00 #0000FF',\n    '#F00 #0F0 #00F',\n    'rgb(255, 0, 0) rgb(0, 255, 0), rgb(0, 0, 255)',\n    'rgba(255, 0, 0, 0.5) rgba(0, 255, 0, 0.5), rgba(0, 0, 255, 0.5)',\n    'hsv(0, 100%, 100%) hsv(120, 100%, 100%) hsv(240, 100%, 100%)',\n    'hsva(0, 100%, 100%, 0.5) hsva(120, 100%, 100%, 0.5) hsva(240, 100%, 100%, 0.5)',\n    'hsl(0, 100%, 100%) hsl(120, 100%, 100%) hsl(240, 100%, 100%)',\n    'hsla(0, 100%, 100%, 0.5) hsla(120, 100%, 100%, 0.5) hsla(240, 100%, 100%, 0.5)'\n].join(', ');\n\nvar synesthesia = require('synesthesia');\n```\n\n##### Hex color matching:\n\n``` javascript\ncolorString.match(synesthesia.hex);\n\n[ '#FF0000',\n  '#00FF00',\n  '#0000FF',\n  '#F00',\n  '#0F0',\n  '#00F' ]\n```\n\n##### RGB color matching:\n\n``` javascript\ncolorString.match(synesthesia.rgb);\n\n[ 'rgb(255, 0, 0)',\n  'rgb(0, 255, 0)',\n  'rgb(0, 0, 255)' ]\n```\n\n##### RGBA color matching:\n\n``` javascript\ncolorString.match(synesthesia.rgba);\n\n[ 'rgba(255, 0, 0, 0.5)',\n  'rgba(0, 255, 0, 0.5)',\n  'rgba(0, 0, 255, 0.5)' ]\n```\n\n##### HSV color matching:\n\n``` javascript\ncolorString.match(synesthesia.hsv);\n\n[ 'hsv(0, 100%, 100%)',\n  'hsv(120, 100%, 100%)',\n  'hsv(240, 100%, 100%)' ]\n```\n\n##### HSVA color matching:\n\n``` javascript\ncolorString.match(synesthesia.hsva);\n\n[ 'hsva(0, 100%, 100%, 0.5)',\n  'hsva(120, 100%, 100%, 0.5)',\n  'hsva(240, 100%, 100%, 0.5)' ]\n```\n\n##### HSL color matching:\n\n``` javascript\ncolorString.match(synesthesia.hsl);\n\n[ 'hsl(0, 100%, 100%)',\n  'hsl(120, 100%, 100%)',\n  'hsl(240, 100%, 100%)' ]\n```\n\n##### HSLA color matching:\n\n``` javascript\ncolorString.match(synesthesia.hsla);\n\n[ 'hsla(0, 100%, 100%, 0.5)',\n  'hsla(120, 100%, 100%, 0.5)',\n  'hsla(240, 100%, 100%, 0.5)' ]\n```\n\n##### CSS color names matching:\n\n``` javascript\ncolorString.match(synesthesia.names);\n\n[ 'red', 'green', 'blue' ]\n```\n\n##### And now all together:\n\n``` javascript\ncolorString.match(synesthesia.all);\n\n[ 'red',\n  'green',\n  'blue',\n  '#FF0000',\n  '#00FF00',\n  '#0000FF',\n  '#F00',\n  '#0F0',\n  '#00F',\n  'rgb(255, 0, 0)',\n  'rgb(0, 255, 0)',\n  'rgb(0, 0, 255)',\n  'rgba(255, 0, 0, 0.5)',\n  'rgba(0, 255, 0, 0.5)',\n  'rgba(0, 0, 255, 0.5)',\n  'hsv(0, 100%, 100%)',\n  'hsv(120, 100%, 100%)',\n  'hsv(240, 100%, 100%)',\n  'hsva(0, 100%, 100%, 0.5)',\n  'hsva(120, 100%, 100%, 0.5)',\n  'hsva(240, 100%, 100%, 0.5)',\n  'hsl(0, 100%, 100%)',\n  'hsl(120, 100%, 100%)',\n  'hsl(240, 100%, 100%)',\n  'hsla(0, 100%, 100%, 0.5)',\n  'hsla(120, 100%, 100%, 0.5)',\n  'hsla(240, 100%, 100%, 0.5)' ]\n```\n\n\nLicense\n-------\n\nThe MIT License (MIT)\n\nCopyright (c) 2014 Peter Müller <munter@fumle.dk>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Munter/synesthesia.git"
  },
  "scripts": {
    "lint": "jshint .",
    "test": "npm run lint && mocha",
    "travis": "npm run lint && istanbul cover _mocha"
  },
  "version": "1.0.1"
}
